#!/usr/bin/env bash


## al-hello: a post install script written for Manjaro
## Copyright 2017 Nathaniel Maia <natemaia10@gmail.com>
## This main script, to be placed somewhere on the PATH

# paths
readonly BIN="/usr/bin"
readonly LOG="$HOME/.al-hello-log"
readonly CONF_PATH="$HOME/.config"
readonly MENU="$HOME/.config/openbox/menu.xml"
readonly RC_PATH="$HOME/.config/openbox/rc.xml"
readonly AUTOSTART="$HOME/.config/openbox/autostart"
readonly HELPERS="$HOME/.config/xfce4/helpers.rc"
readonly MIMEAPP="$HOME/.config/mimeapps.list"

# hardware checks
readonly NV=$(grep -i "nvidia" <<< "$(lspci)")
readonly VM=$(grep -i "hypervisor" <<< "$(dmesg)")

# bash colour escapes
readonly BLUE='\E[1;34m'
readonly RED='\E[1;31m'
readonly GREEN='\E[1;32m'
readonly YELLOW='\E[1;33m'
readonly NORM='\E[0m'

err() {
    local msg=$1
    echo -e "[ERROR]: This program requires /usr/lib/manjaro/common/$msg to work properly"
    exit 1
}

# source first lib file
# this MUST be done first to use draw_box and create_Dialog functions
src() {
    if [ -f "/usr/lib/manjaro/common/al-hello-lib" ]; then
        source "/usr/lib/manjaro/common/al-hello-lib"
    else
        err "al-hello-lib"
    fi
}

initialize() {
    echo "" > "$LOG"
    if [[ -e $HOME/.config/openbox/autostart ]] && grep -q 'al-hello' "$HOME/.config/openbox/autostart"; then
        sed -i '/al-hello/d' "$HOME/.config/openbox/autostart"
    fi

    clear
    echo -e "\n\n\n\t\t\t      ${BLUE} _   _ _____ _     _     ___
    \t\t\t      | | | | ____| |   | |   / _ \\
    \t\t\t      | |_| |  _| | |   | |  | | | |
    \t\t\t      |  _  | |___| |___| |__| |_| |
    \t\t\t      |_| |_|_____|_____|_____\___/ \n${NORM}
    \t\t        Hi${BLUE} ${USER}${NORM}, Welcome to Manjaro Linux! ${BLUE}:)${NORM}\n"
    draw_box ; sleep 1 ; read -n1 -rsp $'\n\tPress Any Key to Continue...\n'
}

checkConnection() {
    while ! [[ "$(ping -c1 8.8.8.8)" ]]; do
        clear ; echo -e "\n\n\n\t${RED}Please Connect to a Network Before Continuing${NORM}"
        draw_box 8 ; sleep 1.5 ; clear
    done
}

update() {
    upd=""
    create_Dialog upd "Would you like to update the system & mirrorlist (recommended)"
    if grep -q '[yY1]' <<< "$upd"; then
        clear ; sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
        clear ; echo -e "\n\n\n\tCurrent mirrorlist backed up as /etc/pacman.d/mirrorlist.backup
        \n\n\tUpdating the mirrorlist please wait, this will take a minute\n"
        draw_box
        sudo reflector --score 120 --fastest 20 --sort rate --save /etc/pacman.d/mirrorlist
        clear ; echo -e "\n\n\n\tMirrorlist optimized for fastest mirrors
        \n\n\tYou can refresh the mirrorlist anytime with the alias ${RED}mirrors${NORM}\n"
        draw_box ; sleep 1 ; read -n1 -rsp $'\n\tPress Any Key to Continue...\n'
        clear ; sudo pacman -Syyu --noconfirm
    fi
}

# Source lib files again after updating
srcLib() {
    if [ -f "/usr/lib/manjaro/common/al-hello-lib" ]; then
        source "/usr/lib/manjaro/common/al-hello-lib"
    else
        err "al-hello-lib"
    fi
    if [ -f "/usr/lib/manjaro/common/al-hello-installation" ]; then
        source "/usr/lib/manjaro/common/al-hello-installation"
    else
        err "al-hello-installation"
    fi
}


configure() {
    window_manager=""
    defaults="" btooth=""  printer=""  swp=""
    main_Dialogs

    if grep -q '[1-4]' <<< "$window_manager"; then
        setup_Window_Manager
    fi
    if grep -q '[yY1]' <<< "$btooth"; then
        setup_Bluetooth
    fi
    if grep -q '[yY1]' <<< "$printer"; then
        setup_Printer
    fi
    if grep -q '[yY1]' <<< "$defaults"; then
        setup_Default_Packages
    fi
    if grep -q '[yY1]' <<< "$swp"; then
        setup_Swapfile
    fi

    # Call this after all dialogs and setups
    install_Selected_Packages
}

# Nvidia Drivers... Call this last as to not conflict with other package managers installing
nvidiaInstallation() {
    if ! [[ -z $NV ]]; then
        nvd=""
        create_Dialog nvd "${GREEN}Nvidia Graphics Detected.${NORM}\tWant to install drivers"
        if grep -q '[yY1]' <<< "$nvd"; then
            nvidia-easy-install
        fi
    fi
}

wrapUp() {
    clear
    echo -e "\n\n\n\tSetup Complete!!\n\n\n\tPress Any Key to Reboot or Ctrl + c to exit..."
    draw_box ; sleep 1
    read -n1 -rsp $'\n\n'
    systemctl reboot
    exit 0
}

src
initialize
checkConnection
update
srcLib
configure
nvidiaInstallation
wrapUp
